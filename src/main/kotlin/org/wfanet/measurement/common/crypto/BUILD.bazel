load("//build/rules_kotlin:defs.bzl", "kt_jvm_library")

package(default_visibility = ["//visibility:public"])

kt_jvm_library(
    name = "invalid_signature_exception",
    srcs = ["InvalidSignatureException.kt"],
    deps = [
    ],
)

kt_jvm_library(
    name = "hashing",
    srcs = ["Hashing.kt"],
    deps = [
        "//imports/kotlin/kotlinx/coroutines:core",
        "//src/main/kotlin/org/wfanet/measurement/common",
        "@wfa_common_jvm//imports/java/com/google/protobuf",
    ],
)

kt_jvm_library(
    name = "key_storage",
    srcs = [
        "KeyHandle.kt",
        "KeyStorageProvider.kt",
        "PrivateKeyStore.kt",
    ],
    deps = [
        "//imports/java/com/google/protobuf",
        "//src/main/kotlin/org/wfanet/measurement/storage:client",
        "//src/main/kotlin/org/wfanet/measurement/storage:store",
    ],
)

kt_jvm_library(
    name = "pem_io",
    srcs = [
        "PemIo.kt",
    ],
    deps = [
        ":security_provider",
    ],
)

kt_jvm_library(
    name = "signing_key_storage",
    srcs = [
        "SigningKeyHandle.kt",
        "SigningKeyStore.kt",
    ],
    deps = [
        ":pem_io",
        ":signatures",
        ":signed_blob",
        "//imports/java/com/google/protobuf",
        "//imports/java/io/netty/handler",
        "//imports/kotlin/kotlinx/coroutines:core",
        "//src/main/kotlin/org/wfanet/measurement/common",
        "//src/main/kotlin/org/wfanet/measurement/storage:client",
        "//src/main/kotlin/org/wfanet/measurement/storage:store",
    ],
)

kt_jvm_library(
    name = "security_provider",
    srcs = [
        "DerEncoding.kt",
        "SecurityProvider.kt",
    ],
    deps = [
        "//imports/java/com/google/protobuf",
        "//imports/java/org/conscrypt",
        "//src/main/kotlin/org/wfanet/measurement/common",
    ],
)

kt_jvm_library(
    name = "signatures",
    srcs = ["Signatures.kt"],
    deps = [
        "//imports/java/com/google/protobuf",
        "//imports/kotlin/kotlinx/coroutines:core",
        "//src/main/kotlin/org/wfanet/measurement/common",
        "//src/main/kotlin/org/wfanet/measurement/common/crypto:invalid_signature_exception",
        "//src/main/kotlin/org/wfanet/measurement/common/crypto:security_provider",
    ],
)

kt_jvm_library(
    name = "signed_blob",
    srcs = ["SignedBlob.kt"],
    deps = [
        ":signatures",
        "//imports/java/com/google/protobuf",
        "//imports/kotlin/kotlinx/coroutines:core",
        "//src/main/kotlin/org/wfanet/measurement/common",
        "//src/main/kotlin/org/wfanet/measurement/storage:client",
    ],
)

kt_jvm_library(
    name = "signing_certs",
    srcs = ["SigningCerts.kt"],
    deps = [
        ":pem_io",
        ":security_provider",
        ":signing_key_storage",
        "//src/main/kotlin/org/wfanet/measurement/common",
    ],
)
