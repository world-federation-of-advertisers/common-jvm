# Copyright 2021 The Cross-Media Measurement Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build and test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, edited]
  workflow_dispatch:

jobs:
  build-test:
    name: Build and test
    runs-on: ubuntu-20.04
    steps:
    - name: Check out revision
      uses: actions/checkout@v4

    - name: Set up Bazel
      uses: world-federation-of-advertisers/actions/setup-bazel@v2

    - name: Write ~/.bazelrc
      run: |
        echo 'common --config=ci' >> ~/.bazelrc

    - name: Get Bazel cache params
      id: get-cache-params
      uses: world-federation-of-advertisers/actions/bazel-get-cache-params@v2
      with:
        cache-version: 1

    - name: Restore Bazel cache
      uses: actions/cache/restore@v4
      with:
        path: ${{ steps.get-cache-params.outputs.cache-path }}
        key: ${{ steps.get-cache-params.outputs.cache-key }}
        restore-keys: |-
          ${{ steps.get-cache-params.outputs.restore-key }}

    - name: Check lockfile
      run: bazel mod deps

    - name: Build
      run: bazel build //...

    - name: Run tests
      id: run-tests
      run: bazel test //...

    # Delete large files that are relatively cheap to re-create.
    - name: Trim Bazel cache
      run: |
        bazel_out="$(bazel info output_path)"
        find "${bazel_out}" -type f \( -iname '*.tar' -o -iname '*.tar.gz' \) -delete
        find "${bazel_out}" -type d -name sha256 -exec chmod -R +w "{}" \;
        find "${bazel_out}" -type f -path '*/sha256/*' -delete

    - name: Save Bazel cache
      uses: actions/cache/save@v4
      continue-on-error: true
      with:
        path: ${{ steps.get-cache-params.outputs.cache-path }}
        key: ${{ steps.get-cache-params.outputs.cache-key }}

    - name: Upload Bazel testlogs
      continue-on-error: true
      uses: world-federation-of-advertisers/actions/bazel-upload-testlogs@v2
      if: failure() && (steps.run-tests.outcome == 'failure')
